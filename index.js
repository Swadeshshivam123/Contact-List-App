//Importing express JS(installed)
const express = require("express");

//Importing path(built-in)
const path = require("path");

//Importing body-parser(installed)
const bodyParser = require("body-parser");

//Declaring and initializing port no for localhost
const port = 7385;

//Importing 'mongoose.js' file from 'config' folder to connect it to the database
const db = require("./config/mongoose");

//Importing 'contact.js' file from 'models' folder into the collection 'Contact' to store the contact details
const Contact = require("./models/contact");

//Exporting expressJS in "app" variable
const app = express();

//Setting "ejs" as the "view engine"('template engine').
app.set("view engine", "ejs");

//Specifying path of "views"
app.set("views", path.join(__dirname, "views"));

//Using bodyParser to encode the data fethed from the form.
//First middleware
//It takes the data sent from the form and parses it into keys and values and updates it into req.body
app.use(bodyParser.urlencoded({ extended: false }));

//Accessing static files like images, css and js files kept in their respective sub-folders inside "assets" folder
app.use(express.static("assets"));

//Displaying the contact list on the homepage of the app
app.get("/", function (req, res) {
  Contact.find({}, function(err, contacts){
    if(err)
    {
      console.log('Error in fetching contacts from the database');
      return;
    }

    return res.render("home", {
      title: "Contacts List",
      contact_list: contacts
    });

  });

});


//Using req.params(string params) or req.query(query params) to delete a contact based on the parameter(name or phone) provided.
//req.query will contain the object {phone: 'xxxxxxx'} which is a request URL generated by clicking on the delete icon from the contact list
app.get("/delete-contact", function (req, res) {
 
  //Get id from the query in the URL
  let id = req.query.id;

  //Find the contact in the database using id and delete it.
  Contact.findByIdAndDelete(id, function(err)
  {
    if(err){
      console.log('Error in deleting the contact from the database.', err);
      return;
    }
    
    //Redirecting back to the same page after updating the database
    return res.redirect('back');
  });

});

//First POST request
//Taking the contact info from req.body(obtained from bodyParser after the data from the form is parsed) and pushing it in contactList array and displaying the updated contact list back on the home page
app.post("/create-contact", function (req, res) {
  // contactList.push(req.body);
  // return res.redirect("back");

  //Adding the submitted contact details from the form to the database
  Contact.create(
    {
      name: req.body.name,
      phone: req.body.phone,
    },
    function (err, newContact) {
      if (err) {
        console.log("Error in creating a contact");
        return;
      }
      console.log("********", newContact);
      return res.redirect("back");
    }
  );
});

//Displaying and error handling if the server is working fine or not.
app.listen(port, function (err) {
  if (err) {
    console.log("Error in running the server ", err);
    return;
  }
  console.log("Yup.!My Express server is running on the port: ", port);
});
